CC = gcc
# -DMEMORY_TRACKING_ENABLED włącza nasz memory tracker
# Możesz to usunąć, aby wyłączyć śledzenie i użyć standardowego malloc/free
CFLAGS_BASE = -Wall -Wextra -Iinclude -g -DMEMORY_TRACKING_ENABLED
CFLAGS_OPT = -O2
CFLAGS = $(CFLAGS_BASE) $(CFLAGS_OPT) -std=c99
LDFLAGS = -lm

# Directories
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin
DATA_DIR = data
PLOTS_DIR = plots
SCRIPT_DIR = scripts
LATEX_DIR = latex_out
INCLUDE_DIR = include

# Pliki źródłowe .c (wszystkie w src/)
# memory_tracker.c powinien być w src/
SOURCES_ALL = $(wildcard $(SRC_DIR)/*.c)
OBJECTS = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SOURCES_ALL))

# Pliki nagłówkowe .h (wszystkie w include/)
HEADERS = $(wildcard $(INCLUDE_DIR)/*.h)

EXECUTABLE = $(BIN_DIR)/tridiagonal_solver_dynmem

.PHONY: all directories run plots tables clean distclean help

all: directories $(EXECUTABLE)

directories:
	@echo "Creating directories..."
	@mkdir -p $(OBJ_DIR) $(BIN_DIR) $(DATA_DIR) $(PLOTS_DIR) $(SCRIPT_DIR) $(LATEX_DIR)

# Reguła kompilacji dla plików .c z src/ do obj/
# Zależność od $(HEADERS) zapewnia rekompilację, jeśli jakikolwiek nagłówek w include/ się zmieni.
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c $(HEADERS)
	@echo "Compiling $< -> $@"
	$(CC) $(CFLAGS) -c $< -o $@

$(EXECUTABLE): $(OBJECTS)
	@echo "Linking $^ -> $@"
	$(CC) $(OBJECTS) -o $@ $(LDFLAGS)

run: all
	@echo "Running $(EXECUTABLE)..."
	./$(EXECUTABLE)
	@echo "Program finished."

plots: run
	@echo "Generating plots using Gnuplot..."
	@# Użyj nazwy pliku z main.c
	@for gp_script in $(wildcard $(SCRIPT_DIR)/plot_tridiag_*_dynmem_v2.gp); do \
		echo "  Executing Gnuplot script: $$gp_script"; \
		gnuplot "$$gp_script" || echo "  Gnuplot failed for $$gp_script"; \
	done
	@echo "Plot generation finished. Check $(PLOTS_DIR)/ directory."

tables: run
	@echo "LaTeX tables generated in $(LATEX_DIR)/ directory by the C program."
	@echo "Compile them with a LaTeX distribution (e.g., pdflatex your_report.tex)."

clean:
	@echo "Cleaning temporary and generated files..."
	rm -f $(OBJ_DIR)/*.o
	rm -f $(EXECUTABLE)
	rm -f $(DATA_DIR)/tridiag_*_dynmem_v2.csv
	rm -f $(PLOTS_DIR)/tridiag_*_dynmem_v2.png
	rm -f $(SCRIPT_DIR)/plot_tridiag_*_dynmem_v2.gp
	rm -f $(LATEX_DIR)/table_tridiag_*_dynmem_v2.txt
	@echo "Cleaning finished."

distclean: clean
	@echo "Removing all generated directories..."
	rm -rf $(OBJ_DIR) $(BIN_DIR) $(DATA_DIR) $(PLOTS_DIR) $(SCRIPT_DIR) $(LATEX_DIR)
	@echo "Distclean finished."

help:
	@echo "Available commands:"
	@echo "  make all        - Compiles the program (default)"
	@echo "  make run        - Compiles and runs the program"
	@echo "  make plots      - Compiles, runs, and then executes Gnuplot scripts"
	@echo "  make tables     - Compiles and runs (tables generated by C program)"
	@echo "  make clean      - Removes temporary and generated output files"
	@echo "  make distclean  - Performs 'clean' and removes generated directories"