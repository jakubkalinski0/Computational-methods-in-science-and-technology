# === Compiler and Flags ===
CC = gcc
CFLAGS = -Wall -Wextra -O2 -Iinclude
LDFLAGS = -lm

# === Directories ===
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin
INC_DIR = include
DATA_DIR = data
PLOTS_DIR = plots

# === Files ===
SOURCES = $(wildcard $(SRC_DIR)/*.c)
OBJECTS = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SOURCES))
HEADERS = $(wildcard $(INC_DIR)/*.h)
EXECUTABLE = $(BIN_DIR)/computer_arithmetic

# === Generated Files (for cleaning and listing) ===
# Base names used in C code
BASE_NAME_SEP = separate_results
BASE_NAME_ORIG = results
BASE_NAME_ERR = error_analysis

# Construct patterns for generated files based on C code logic
DATA_FILES = $(DATA_DIR)/$(BASE_NAME_SEP)_f[1-4].csv $(DATA_DIR)/$(BASE_NAME_ORIG).csv $(DATA_DIR)/$(BASE_NAME_SEP)_$(BASE_NAME_ERR).csv
PLOT_SCRIPTS = $(PLOTS_DIR)/chart_f[1-4]_all_types.gp \
               $(PLOTS_DIR)/chart_collage.gp \
               $(PLOTS_DIR)/chart_$(BASE_NAME_ERR).gp \
               $(PLOTS_DIR)/chart_f[1-4].gp \
               $(PLOTS_DIR)/chart_float.gp \
               $(PLOTS_DIR)/chart_double.gp \
               $(PLOTS_DIR)/chart_long_double.gp \
               $(PLOTS_DIR)/chart_f[1-4]_float.gp \
               $(PLOTS_DIR)/chart_f[1-4]_double.gp \
               $(PLOTS_DIR)/chart_f[1-4]_long_double.gp
PLOT_IMAGES = $(patsubst $(PLOTS_DIR)/%.gp,$(PLOTS_DIR)/%.png,$(wildcard $(PLOT_SCRIPTS)))


# === Targets ===

.PHONY: all directories run plots clean distclean help

# Default target: Build everything
all: directories $(EXECUTABLE)

# Target to create necessary directories
directories:
	@mkdir -p $(OBJ_DIR) $(BIN_DIR) $(DATA_DIR) $(PLOTS_DIR)

# Rule to link the final executable
$(EXECUTABLE): $(OBJECTS)
	@echo "Linking..."
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)
	@echo "Executable created: $@"

# Rule to compile a .c file into a .o file
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c $(HEADERS) Makefile
	@echo "Compiling $<..."
	$(CC) $(CFLAGS) -c $< -o $@

# Target to run the C program to generate data and scripts
# Passes DATA_DIR and PLOTS_DIR as arguments
run: all
	@echo "Running $(EXECUTABLE) to generate data in $(DATA_DIR) and scripts in $(PLOTS_DIR)..."
	@$(EXECUTABLE) $(DATA_DIR) $(PLOTS_DIR)
	@echo "Program finished generating files."

# Target to execute gnuplot scripts after they are generated by 'run'
plots: run
	@echo "Executing gnuplot scripts located in $(PLOTS_DIR)..."
	@echo "Using data from $(DATA_DIR) and saving plots to $(PLOTS_DIR)."
	# --- Execute Gnuplot for each generated script ---
	# Loop through all expected script files defined in PLOT_SCRIPTS
	@scripts_found=0; \
	for script in $(PLOT_SCRIPTS); do \
	    if [ -f "$$script" ]; then \
	        echo "Executing: gnuplot \"$$script\""; \
	        gnuplot "$$script"; \
	        scripts_found=$$((scripts_found+1)); \
	    else \
	        echo "Warning: Script $$script not found (expected based on Makefile pattern)."; \
	    fi; \
	done; \
	if [ $$scripts_found -eq 0 ]; then \
		echo "Error: No gnuplot scripts found in $(PLOTS_DIR) to execute."; \
		exit 1; \
	fi

	@echo "--- Gnuplot execution finished. ---"
	@echo "--- Listing Data Files ($(DATA_DIR)): ---"
	@ls -l $(DATA_DIR) 2>/dev/null || echo "No data files found in $(DATA_DIR)."
	@echo "--- Listing Plot Scripts ($(PLOTS_DIR)): ---"
	@ls -l $(PLOTS_DIR)/*.gp 2>/dev/null || echo "No plot scripts found in $(PLOTS_DIR)."
	@echo "--- Listing Plot Images ($(PLOTS_DIR)): ---"
	@ls -l $(PLOTS_DIR)/*.png 2>/dev/null || echo "No plot images found in $(PLOTS_DIR)."


# Target to clean intermediate files, executable, data, scripts, and plots
clean:
	@echo "Cleaning build artifacts..."
	rm -f $(OBJ_DIR)/*.o
	rm -f $(EXECUTABLE)
	rm -f $(DATA_FILES)
	rm -f $(PLOT_SCRIPTS)
	rm -f $(PLOT_IMAGES)
	# Remove any potential stray files in root from previous runs
	rm -f *.csv *.gp *.png
	@echo "Clean finished."

# Target to clean everything 'clean' does PLUS the created directories
distclean: clean
	@echo "Cleaning directories..."
	rm -rf $(OBJ_DIR) $(BIN_DIR) $(DATA_DIR) $(PLOTS_DIR)
	@echo "Distclean finished."

# Target to display help
help:
	@echo "Makefile for Lab1_Computer_Arithmetic"
	@echo ""
	@echo "Usage:"
	@echo "  make all       - Compile the project (default)."
	@echo "  make run       - Compile and run to generate .csv data and .gp scripts."
	@echo "  make plots     - Compile, run, and execute gnuplot scripts to generate .png plots."
	@echo "  make clean     - Remove object files, executable, data, scripts, and plots."
	@echo "  make distclean - Remove all generated files and directories (obj, bin, data, plots)."
	@echo "  make help      - Show this help message."