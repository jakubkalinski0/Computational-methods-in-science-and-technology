# Compiler and flags
CC = gcc
CFLAGS = -Wall -Wextra -O3 -Iinclude -g -Wno-unused-parameter
LDFLAGS = -lm # Link math library
PYTHON = python3 # Define Python interpreter

# Directories
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin
DATA_DIR = data
PLOTS_DIR = plots
SCRIPT_DIR = scripts

# Source and object files
SOURCES = $(SRC_DIR)/approximation.c \
          $(SRC_DIR)/error.c \
          $(SRC_DIR)/fileio.c \
          $(SRC_DIR)/function.c \
          $(SRC_DIR)/linear_algebra.c \
          $(SRC_DIR)/main.c \
          $(SRC_DIR)/nodes.c
OBJECTS = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SOURCES))
EXECUTABLE = $(BIN_DIR)/approximation_app

# --- Generated Files ---
# Data generated by C program
HEATMAP_DATA = $(DATA_DIR)/approximation_heatmap_errors.csv
ORIGINAL_PLOT_DATA = $(DATA_DIR)/original_function_plot.dat
# Data files for individual approximations and sample points are also generated by C code.

# Script generated by C program
INDIVIDUAL_APPROX_SCRIPT = $(SCRIPT_DIR)/plot_all_approximations.gp

# Python script for heatmap plotting (NOW LOCATED IN SRC_DIR)
PYTHON_PLOT_SCRIPT = $(SRC_DIR)/plot_heatmaps.py # <-- MODIFIED PATH HERE

# Plot files generated by Python script
# NOTE: Adjusted the expected filenames to match the output from the provided python script
PY_MAX_ERR_PLOT = $(PLOTS_DIR)/py_approximation_max_error_heatmap_axes_swapped.pdf # Example, adjust format if needed
PY_MSE_PLOT = $(PLOTS_DIR)/py_approximation_mse_heatmap_axes_swapped.pdf       # Example, adjust format if needed
PY_ANN_MAX_ERR_PLOT = $(PLOTS_DIR)/py_annotated_max_error_heatmap_axes_swapped.pdf # Example
PY_ANN_MSE_PLOT = $(PLOTS_DIR)/py_annotated_mse_heatmap_axes_swapped.pdf   # Example
# Select primary plot format based on Python script setting (defaulting to pdf here)
# The python script determines the actual format generated.
# The makefile rule uses these mainly as dependency triggers.
PY_PLOTS = $(PY_MAX_ERR_PLOT) $(PY_MSE_PLOT)

# Individual plot files are generated inside the Gnuplot script loop.

# Default rule: build the executable
all: directories $(EXECUTABLE)

# Create necessary directories
directories:
	@mkdir -p $(OBJ_DIR) $(BIN_DIR) $(DATA_DIR) $(PLOTS_DIR) $(SCRIPT_DIR)

# Compile object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c $(addprefix include/, common.h function.h nodes.h approximation.h error.h fileio.h linear_algebra.h)
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) -c $< -o $@

# Link the program
$(EXECUTABLE): $(OBJECTS)
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

# --- Data Generation and Plotting ---

# Target to run the C program and generate data (CSV, original plot data, individual plot data)
# and the Gnuplot script for individual plots.
# Depends on the executable. Lists *primary* outputs.
run: $(EXECUTABLE) $(HEATMAP_DATA) $(ORIGINAL_PLOT_DATA) $(INDIVIDUAL_APPROX_SCRIPT)

# Rule showing how the primary outputs are generated by running the executable.
$(HEATMAP_DATA) $(ORIGINAL_PLOT_DATA) $(INDIVIDUAL_APPROX_SCRIPT): $(EXECUTABLE)
	@echo "Running C program $(EXECUTABLE) to generate data files and individual plot script..."
	@./$(EXECUTABLE)


# Target to generate heatmap plots using the Python script.
# Depends on the Python script itself and the data file generated by the C code.
# Lists the main Python-generated plots as targets.
py_plots: $(PYTHON_PLOT_SCRIPT) $(HEATMAP_DATA) $(PY_PLOTS)

# Rule to generate plots using Python. Lists main output files as targets.
# Note: This rule triggers the Python script which generates *all* its plots (incl. annotated if applicable).
$(PY_PLOTS): $(PYTHON_PLOT_SCRIPT) $(HEATMAP_DATA)
	@echo "Generating heatmap plots using Python script..."
	$(PYTHON) $(PYTHON_PLOT_SCRIPT) # The command correctly uses the updated path


# Target to generate ALL individual approximation plots using Gnuplot.
# Depends on the Gnuplot script generated by the C program and the original function data.
# Note: Does not list individual PNGs as the script generates many.
generate_individual_plots: $(INDIVIDUAL_APPROX_SCRIPT) $(ORIGINAL_PLOT_DATA)
	@echo "Generating all individual approximation plots using Gnuplot (this may take a while)..."
	@gnuplot $(INDIVIDUAL_APPROX_SCRIPT)


# The main 'plots' target:
# 1. Ensures C data/scripts are generated (via 'run').
# 2. Generates Python heatmaps (via 'py_plots').
# 3. Generates Gnuplot individual plots (via 'generate_individual_plots').
plots: run py_plots generate_individual_plots
	@echo ""
	@echo "--- Plot Generation Summary ---"
	@echo "Generated CSV data file:"
	@ls -l $(HEATMAP_DATA) 2>/dev/null || echo "  $(HEATMAP_DATA) not found."
	@echo "Generated Heatmap plots (Python):"
	# Check for common formats generated by the script
	@ls -l $(PLOTS_DIR)/py_*.pdf $(PLOTS_DIR)/py_*.png $(PLOTS_DIR)/py_*.svg 2>/dev/null || echo "  No Python heatmap plots found in $(PLOTS_DIR)."
	@echo "Generated Individual plots (Gnuplot):"
	# Check for Gnuplot plots (usually PNG based on C script)
	@ls -l $(PLOTS_DIR)/approximation_m*.png 2>/dev/null || echo "  No Gnuplot individual plots found in $(PLOTS_DIR)."
	@echo "---------------------------------"
	@echo "Plot generation finished. Check the '$(PLOTS_DIR)' directory."


# --- Cleaning ---

# Clean temporary files and generated outputs
clean:
	@echo "Cleaning temporary files and generated outputs..."
	rm -f $(OBJ_DIR)/*.o
	rm -f $(EXECUTABLE)
	# Remove generated data files (CSV, DAT)
	rm -f $(DATA_DIR)/*.csv $(DATA_DIR)/*.dat
	# Remove generated plot files (Python heatmaps, Gnuplot individual plots)
	rm -f $(PLOTS_DIR)/*.* $(PLOTS_DIR)/*.png # Remove common plot extensions
	# Remove generated gnuplot script
	rm -f $(SCRIPT_DIR)/*.gp
	@echo "Cleaning finished."

# Deep clean (remove generated directories too)
distclean: clean
	@echo "Removing all generated directories..."
	rm -rf $(OBJ_DIR) $(BIN_DIR) $(DATA_DIR) $(PLOTS_DIR) $(SCRIPT_DIR)
	@echo "Deep cleaning finished."

# --- Help ---

# Help message
help:
	@echo "Available commands:"
	@echo "  make all          - Compiles the C approximation program (default)"
	@echo "  make run          - Compiles and runs the C program to generate data files (.csv, .dat) and the individual plot Gnuplot script"
	@echo "  make py_plots     - Runs the Python script (now in src/) to generate heatmap plots (requires data from 'make run')"
	@echo "  make generate_individual_plots - Runs Gnuplot to generate individual plots (requires script/data from 'make run')"
	@echo "  make plots        - Runs 'make run', then generates all Python heatmaps and Gnuplot individual plots"
	@echo "  make clean        - Removes object files, executable, generated data, plots, and scripts"
	@echo "  make distclean    - Performs 'clean' and removes generated directories"
	@echo "  make help         - Displays this help message"

# Declare phony targets
.PHONY: all directories run plots py_plots generate_individual_plots clean distclean help